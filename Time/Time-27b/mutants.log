1:COR:iNotPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> false
2:COR:iNotPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> true
3:COR:iNotParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> false
4:COR:iNotParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> true
5:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> false
6:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> false
7:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> false
8:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> false
9:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null == (parser == null)
10:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> false
11:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null
12:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> parser == null
13:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> false
14:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> false
15:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> false
16:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> false
17:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
18:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null
19:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> pluralText == null
20:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> true
21:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> false
22:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> true
23:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> false
24:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> false
25:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> false
26:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
27:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null
28:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> pluralText == null
29:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> true
30:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() != 0
31:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() >= 0
32:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> false
33:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
34:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
35:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
36:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
37:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
38:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
39:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
40:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
41:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> false
42:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> false
43:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null != (originalParser == null)
44:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null
45:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalParser == null
46:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> true
47:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> true
48:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) != (originalPrinter != originalParser)
49:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter == null || originalParser == null
50:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter != originalParser
51:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> true
52:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) != !(originalPrinter instanceof FieldFormatter)
53:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> originalPrinter == null || originalParser == null || originalPrinter != originalParser
54:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):601:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> !(originalPrinter instanceof FieldFormatter)
55:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> true
56:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
57:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
58:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
59:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
60:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
61:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
62:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
63:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
64:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> false
65:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> false
66:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null != (finalText == null)
67:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null
68:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> finalText == null
69:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> true
70:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() <= 0
71:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() >= 0
72:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> false
73:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
74:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> useBefore
75:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
76:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter == (useBefore == false)
77:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> false
78:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter
79:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useBefore == false
80:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i == 0
81:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i > 0
82:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> true
83:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i % 1
84:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i * 1
85:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i - 1
86:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i / 1
87:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> true
88:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() <= 0
89:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() >= 0
90:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> false
91:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null == (pairs.size() == 0)
92:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> false
93:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null
94:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> pairs.size() == 0
95:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> true
96:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> false
97:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> false
98:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter == notParser
99:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> false
100:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter
101:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notParser
102:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size == 2
103:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size > 2
104:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> true
105:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 == elementPairs.get(0) instanceof Separator
106:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> false
107:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2
108:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> elementPairs.get(0) instanceof Separator
109:COR:notPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):806:notPrinter |==> false
110:COR:notPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):806:notPrinter |==> true
111:COR:notParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notParser |==> false
112:COR:notParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notParser |==> true
113:COR:periodStr.regionMatches(true, position, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):876:periodStr.regionMatches(true, position, text, 0, textLength) |==> false
114:COR:periodStr.regionMatches(true, position, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):876:periodStr.regionMatches(true, position, text, 0, textLength) |==> true
115:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):877:position + textLength |==> position % textLength
116:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):877:position + textLength |==> position * textLength
117:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):877:position + textLength |==> position - textLength
118:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):877:position + textLength |==> position / textLength
119:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):887:pos < sourceLength |==> pos != sourceLength
120:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):887:pos < sourceLength |==> pos <= sourceLength
121:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):887:pos < sourceLength |==> false
122:COR:periodStr.regionMatches(true, pos, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):888:periodStr.regionMatches(true, pos, text, 0, textLength) |==> false
123:COR:periodStr.regionMatches(true, pos, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):888:periodStr.regionMatches(true, pos, text, 0, textLength) |==> true
124:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):920:value == 1 |==> value <= 1
125:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):920:value == 1 |==> value >= 1
126:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):920:value == 1 |==> false
127:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):924:value == 1 |==> value <= 1
128:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):924:value == 1 |==> value >= 1
129:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):924:value == 1 |==> false
130:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):928:value == 1 |==> value <= 1
131:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):928:value == 1 |==> value >= 1
132:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):928:value == 1 |==> false
133:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):935:text1.length() < text2.length() |==> text1.length() != text2.length()
134:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):935:text1.length() < text2.length() |==> text1.length() <= text2.length()
135:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):935:text1.length() < text2.length() |==> false
136:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):943:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> false
137:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):943:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> true
138:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):944:position + text1.length() |==> position % text1.length()
139:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):944:position + text1.length() |==> position * text1.length()
140:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):944:position + text1.length() |==> position - text1.length()
141:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):944:position + text1.length() |==> position / text1.length()
142:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):947:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> false
143:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):947:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> true
144:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):948:position + text2.length() |==> position % text2.length()
145:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):948:position + text2.length() |==> position * text2.length()
146:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):948:position + text2.length() |==> position - text2.length()
147:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):948:position + text2.length() |==> position / text2.length()
148:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):958:text1.length() < text2.length() |==> text1.length() != text2.length()
149:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):958:text1.length() < text2.length() |==> text1.length() <= text2.length()
150:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):958:text1.length() < text2.length() |==> false
151:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):969:pos < sourceLength |==> pos != sourceLength
152:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):969:pos < sourceLength |==> pos <= sourceLength
153:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):969:pos < sourceLength |==> false
154:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):970:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> false
155:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):970:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> true
156:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):973:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> false
157:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):973:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> true
158:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):995:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) % iRight.calculatePrintedLength(value)
159:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):995:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) * iRight.calculatePrintedLength(value)
160:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):995:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) - iRight.calculatePrintedLength(value)
161:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):995:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) / iRight.calculatePrintedLength(value)
162:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1011:position >= 0 |==> position == 0
163:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1011:position >= 0 |==> position > 0
164:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1011:position >= 0 |==> true
165:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1019:pos >= 0 |==> pos == 0
166:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1019:pos >= 0 |==> pos > 0
167:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1019:pos >= 0 |==> true
168:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1070:field.iSuffix != null |==> true
169:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1077:stopAt <= 0 |==> stopAt < 0
170:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1077:stopAt <= 0 |==> stopAt == 0
171:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1077:stopAt <= 0 |==> true
172:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
173:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
174:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
175:ROR:!=(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) < Long.MAX_VALUE
176:ROR:!=(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) > Long.MAX_VALUE
177:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:getFieldValue(period) != Long.MAX_VALUE |==> true
178:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS != (getFieldValue(period) != Long.MAX_VALUE)
179:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS
180:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) != Long.MAX_VALUE
181:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> true
182:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1088:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
183:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1088:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
184:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1088:valueLong == Long.MAX_VALUE |==> false
185:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1093:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
186:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1093:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
187:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1093:iFieldType >= SECONDS_MILLIS |==> true
188:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1099:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
189:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1099:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
190:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1099:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
191:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
192:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
193:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
194:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
195:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) <= 0
196:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) >= 0
197:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
198:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1099:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS == ((Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)
199:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1099:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
200:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1099:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS
201:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0
202:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1104:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
203:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1104:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
204:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1104:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
205:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1104:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
206:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1108:iPrefix != null |==> true
207:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1111:iSuffix != null |==> true
208:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1120:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
209:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1120:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
210:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1120:valueLong == Long.MAX_VALUE |==> false
211:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1124:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
212:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1124:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
213:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1124:iFieldType >= SECONDS_MILLIS |==> true
214:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1125:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
215:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1125:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
216:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1125:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
217:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1125:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
218:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1128:iPrefix != null |==> true
219:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1132:minDigits <= 1 |==> minDigits < 1
220:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1132:minDigits <= 1 |==> minDigits == 1
221:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1132:minDigits <= 1 |==> true
222:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1137:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
223:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1137:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
224:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1137:iFieldType >= SECONDS_MILLIS |==> true
225:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1138:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
226:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1138:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
227:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1138:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
228:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1138:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
229:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
230:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
231:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS |==> false
232:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:dp > 0 |==> dp != 0
233:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:dp > 0 |==> dp >= 0
234:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:dp > 0 |==> false
235:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
236:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
237:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
238:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
239:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1144:iSuffix != null |==> true
240:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1151:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
241:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1151:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
242:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1151:valueLong == Long.MAX_VALUE |==> false
243:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1155:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
244:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1155:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
245:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1155:iFieldType >= SECONDS_MILLIS |==> true
246:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1156:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
247:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1156:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
248:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1156:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
249:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1156:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
250:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1159:iPrefix != null |==> true
251:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1163:minDigits <= 1 |==> minDigits < 1
252:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1163:minDigits <= 1 |==> minDigits == 1
253:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1163:minDigits <= 1 |==> true
254:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1168:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
255:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1168:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
256:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1168:iFieldType >= SECONDS_MILLIS |==> true
257:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
258:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
259:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
260:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
261:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
262:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
263:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS |==> false
264:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:dp > 0 |==> dp != 0
265:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:dp > 0 |==> dp >= 0
266:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:dp > 0 |==> false
267:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
268:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
269:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
270:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
271:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:iSuffix != null |==> true
272:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1184:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
273:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1184:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
274:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1184:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
275:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1187:position >= text.length() |==> position == text.length()
276:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1187:position >= text.length() |==> position > text.length()
277:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1187:position >= text.length() |==> true
278:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1188:mustParse |==> false
279:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1188:mustParse |==> true
280:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1191:iPrefix != null |==> true
281:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= 0 |==> position == 0
282:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= 0 |==> position > 0
283:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= 0 |==> true
284:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1198:mustParse |==> false
285:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1198:mustParse |==> true
286:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1209:iSuffix != null |==> true
287:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1209:iSuffix != null && !mustParse |==> iSuffix != null == !mustParse
288:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1209:iSuffix != null && !mustParse |==> false
289:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1209:iSuffix != null && !mustParse |==> iSuffix != null
290:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1209:iSuffix != null && !mustParse |==> !mustParse
291:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1213:suffixPos >= 0 |==> suffixPos == 0
292:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1213:suffixPos >= 0 |==> suffixPos > 0
293:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1213:suffixPos >= 0 |==> true
294:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1218:mustParse |==> false
295:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1218:mustParse |==> true
296:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse == !isSupported(period.getPeriodType(), iFieldType)
297:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> false
298:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse
299:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !isSupported(period.getPeriodType(), iFieldType)
300:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1235:suffixPos > 0 |==> suffixPos != 0
301:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1235:suffixPos > 0 |==> suffixPos >= 0
302:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1235:suffixPos > 0 |==> false
303:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1236:suffixPos - position |==> suffixPos % position
304:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1236:suffixPos - position |==> suffixPos * position
305:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1236:suffixPos - position |==> suffixPos + position
306:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1236:suffixPos - position |==> suffixPos / position
307:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:text.length() - position |==> text.length() % position
308:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:text.length() - position |==> text.length() * position
309:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:text.length() - position |==> text.length() + position
310:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:text.length() - position |==> text.length() / position
311:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1245:length < limit |==> length != limit
312:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1245:length < limit |==> length <= limit
313:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1245:length < limit |==> false
314:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1246:position + length |==> position % length
315:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1246:position + length |==> position * length
316:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1246:position + length |==> position - length
317:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1246:position + length |==> position / length
318:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 |==> length <= 0
319:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 |==> length >= 0
320:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 |==> false
321:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' |==> c <= '-'
322:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' |==> c >= '-'
323:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' |==> false
324:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '+' |==> c <= '+'
325:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '+' |==> c >= '+'
326:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '+' |==> false
327:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' || c == '+' |==> c == '-' != (c == '+')
328:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' || c == '+' |==> c == '-'
329:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' || c == '+' |==> c == '+'
330:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:c == '-' || c == '+' |==> true
331:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
332:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') |==> false
333:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') |==> length == 0
334:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
335:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> (length == 0 && (c == '-' || c == '+')) == !iRejectSignedValues
336:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> false
337:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> length == 0 && (c == '-' || c == '+')
338:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> !iRejectSignedValues
339:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:c == '-' |==> c <= '-'
340:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:c == '-' |==> c >= '-'
341:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:c == '-' |==> false
342:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 |==> length % 1
343:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 |==> length * 1
344:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 |==> length - 1
345:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 |==> length / 1
346:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit |==> length + 1 == limit
347:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit |==> length + 1 > limit
348:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit |==> true
349:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length |==> position % length
350:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length |==> position * length
351:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length |==> position - length
352:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length |==> position / length
353:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length + 1 |==> (position + length) % 1
354:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length + 1 |==> (position + length) * 1
355:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length + 1 |==> position + length - 1
356:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:position + length + 1 |==> (position + length) / 1
357:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) != '0'
358:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) <= '0'
359:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:(c = text.charAt(position + length + 1)) < '0' |==> false
360:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit != (c = text.charAt(position + length + 1)) < '0'
361:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit
362:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) < '0'
363:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> true
364:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:c > '9' |==> c != '9'
365:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:c > '9' |==> c >= '9'
366:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:c > '9' |==> false
367:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') != c > '9'
368:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0'
369:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> c > '9'
370:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1253:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> true
371:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:negative |==> false
372:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:negative |==> true
373:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:limit + 1 |==> limit % 1
374:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:limit + 1 |==> limit * 1
375:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:limit + 1 |==> limit - 1
376:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:limit + 1 |==> limit / 1
377:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:text.length() - position |==> text.length() % position
378:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:text.length() - position |==> text.length() * position
379:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:text.length() - position |==> text.length() + position
380:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:text.length() - position |==> text.length() / position
381:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' |==> c == '0'
382:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' |==> c > '0'
383:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' |==> true
384:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c <= '9' |==> c < '9'
385:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c <= '9' |==> c == '9'
386:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c <= '9' |==> true
387:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
388:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' && c <= '9' |==> false
389:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' && c <= '9' |==> c >= '0'
390:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1269:c >= '0' && c <= '9' |==> c <= '9'
391:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' |==> c <= '.'
392:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' |==> c >= '.'
393:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' |==> false
394:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == ',' |==> c <= ','
395:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == ',' |==> c >= ','
396:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == ',' |==> false
397:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' || c == ',' |==> c == '.' != (c == ',')
398:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' || c == ',' |==> c == '.'
399:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' || c == ',' |==> c == ','
400:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:c == '.' || c == ',' |==> true
401:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
402:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
403:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS |==> false
404:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
405:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
406:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
407:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS != (iFieldType == SECONDS_OPTIONAL_MILLIS)
408:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS
409:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_OPTIONAL_MILLIS
410:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
411:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') == (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
412:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> false
413:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',')
414:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1273:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
415:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:fractPos >= 0 |==> fractPos == 0
416:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:fractPos >= 0 |==> fractPos > 0
417:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:fractPos >= 0 |==> true
418:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length |==> position % length
419:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length |==> position * length
420:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length |==> position - length
421:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length |==> position / length
422:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length + 1 |==> (position + length) % 1
423:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length + 1 |==> (position + length) * 1
424:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length + 1 |==> position + length - 1
425:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:position + length + 1 |==> (position + length) / 1
426:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:limit + 1 |==> limit % 1
427:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:limit + 1 |==> limit * 1
428:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:limit + 1 |==> limit - 1
429:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:limit + 1 |==> limit / 1
430:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:text.length() - position |==> text.length() % position
431:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:text.length() - position |==> text.length() * position
432:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:text.length() - position |==> text.length() + position
433:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:text.length() - position |==> text.length() / position
434:COR:hasDigits:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1288:hasDigits |==> false
435:COR:hasDigits:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1288:hasDigits |==> true
436:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 |==> suffixPos == 0
437:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 |==> suffixPos > 0
438:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 |==> true
439:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length |==> position % length
440:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length |==> position * length
441:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length |==> position - length
442:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length |==> position / length
443:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length != suffixPos |==> position + length < suffixPos
444:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length != suffixPos |==> position + length > suffixPos
445:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:position + length != suffixPos |==> true
446:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 == (position + length != suffixPos)
447:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 && position + length != suffixPos |==> false
448:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0
449:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1292:suffixPos >= 0 && position + length != suffixPos |==> position + length != suffixPos
450:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
451:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
452:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS |==> true
453:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
454:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
455:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_OPTIONAL_MILLIS |==> true
456:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS == (iFieldType != SECONDS_OPTIONAL_MILLIS)
457:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> false
458:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS
459:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1300:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
460:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1303:fractPos < 0 |==> fractPos != 0
461:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1303:fractPos < 0 |==> fractPos <= 0
462:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1303:fractPos < 0 |==> false
463:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position |==> fractPos % position
464:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position |==> fractPos * position
465:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position |==> fractPos + position
466:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position |==> fractPos / position
467:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position - 1 |==> (fractPos - position) % 1
468:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position - 1 |==> (fractPos - position) * 1
469:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position - 1 |==> fractPos - position + 1
470:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:fractPos - position - 1 |==> (fractPos - position) / 1
471:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length |==> position % length
472:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length |==> position * length
473:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length |==> position - length
474:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length |==> position / length
475:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length - fractPos |==> (position + length) % fractPos
476:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length - fractPos |==> (position + length) * fractPos
477:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length - fractPos |==> position + length + fractPos
478:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:position + length - fractPos |==> (position + length) / fractPos
479:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:fractLen <= 0 |==> fractLen < 0
480:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:fractLen <= 0 |==> fractLen == 0
481:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:fractLen <= 0 |==> true
482:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1315:fractLen >= 3 |==> fractLen == 3
483:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1315:fractLen >= 3 |==> fractLen > 3
484:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1315:fractLen >= 3 |==> true
485:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:fractLen == 1 |==> fractLen <= 1
486:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:fractLen == 1 |==> fractLen >= 1
487:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:fractLen == 1 |==> false
488:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:wholeValue < 0 |==> wholeValue != 0
489:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:wholeValue < 0 |==> wholeValue <= 0
490:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:wholeValue < 0 |==> false
491:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 |==> position == 0
492:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 |==> position > 0
493:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 |==> true
494:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:iSuffix != null |==> true
495:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 && iSuffix != null |==> position >= 0 == (iSuffix != null)
496:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 && iSuffix != null |==> false
497:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 && iSuffix != null |==> position >= 0
498:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position >= 0 && iSuffix != null |==> iSuffix != null
499:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1349:length >= 10 |==> length == 10
500:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1349:length >= 10 |==> length > 10
501:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1349:length >= 10 |==> true
502:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:position + length |==> position % length
503:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:position + length |==> position * length
504:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:position + length |==> position - length
505:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:position + length |==> position / length
506:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:length <= 0 |==> length < 0
507:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:length <= 0 |==> length == 0
508:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:length <= 0 |==> true
509:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:value == '-' |==> value <= '-'
510:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:value == '-' |==> value >= '-'
511:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:value == '-' |==> false
512:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:--length < 0 |==> --length != 0
513:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:--length < 0 |==> --length <= 0
514:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:--length < 0 |==> false
515:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1369:length-- > 0 |==> length-- != 0
516:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1369:length-- > 0 |==> length-- >= 0
517:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1369:length-- > 0 |==> false
518:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
519:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
520:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
521:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
522:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) % text.charAt(position++)
523:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) * text.charAt(position++)
524:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) - text.charAt(position++)
525:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) / text.charAt(position++)
526:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) % '0'
527:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) * '0'
528:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(position++) + '0'
529:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) / '0'
530:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:negative |==> false
531:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:negative |==> true
532:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1380:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
533:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1380:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
534:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1380:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
535:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:type != null |==> true
536:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:isSupported(type, iFieldType) == false |==> false
537:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType)
538:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:isSupported(type, iFieldType) == false |==> false
539:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:type != null && isSupported(type, iFieldType) == false |==> type != null == (isSupported(type, iFieldType) == false)
540:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:type != null && isSupported(type, iFieldType) == false |==> false
541:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:type != null && isSupported(type, iFieldType) == false |==> type != null
542:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1385:type != null && isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType) == false
543:AOR:*(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds % (long)DateTimeConstants.MILLIS_PER_SECOND
544:AOR:*(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds + (long)DateTimeConstants.MILLIS_PER_SECOND
545:AOR:*(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds - (long)DateTimeConstants.MILLIS_PER_SECOND
546:AOR:*(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds / (long)DateTimeConstants.MILLIS_PER_SECOND
547:AOR:+(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) % millis
548:AOR:+(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) * millis
549:AOR:+(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) - millis
550:AOR:+(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1422:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) / millis
551:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1427:value == 0 |==> value <= 0
552:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1427:value == 0 |==> value >= 0
553:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1427:value == 0 |==> false
554:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1432:iFieldFormatters[iFieldType] == this |==> false
555:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1432:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
556:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1432:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
557:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1432:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
558:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1432:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
559:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:iFieldType + 1 |==> iFieldType % 1
560:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:iFieldType + 1 |==> iFieldType * 1
561:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:iFieldType + 1 |==> iFieldType - 1
562:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:iFieldType + 1 |==> iFieldType / 1
563:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:i <= MAX_FIELD |==> i < MAX_FIELD
564:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:i <= MAX_FIELD |==> i == MAX_FIELD
565:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:i <= MAX_FIELD |==> true
566:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:iFieldFormatters[i] != null |==> true
567:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
568:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isSupported(type, i) && iFieldFormatters[i] != null |==> false
569:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
570:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
571:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1443:iFieldFormatters[iFieldType] == this |==> false
572:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1443:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
573:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1443:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
574:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1443:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
575:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1443:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
576:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 |==> i == 0
577:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 |==> i > 0
578:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 |==> true
579:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i <= MAX_FIELD |==> i < MAX_FIELD
580:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i <= MAX_FIELD |==> i == MAX_FIELD
581:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i <= MAX_FIELD |==> true
582:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 && i <= MAX_FIELD |==> i >= 0 == i <= MAX_FIELD
583:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 && i <= MAX_FIELD |==> false
584:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 && i <= MAX_FIELD |==> i >= 0
585:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:i >= 0 && i <= MAX_FIELD |==> i <= MAX_FIELD
586:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1447:iFieldFormatters[i] != null |==> true
587:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1447:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
588:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1447:isSupported(type, i) && iFieldFormatters[i] != null |==> false
589:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1447:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
590:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1447:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
591:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1462:i < isize |==> i != isize
592:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1462:i < isize |==> i <= isize
593:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1462:i < isize |==> false
594:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1463:period.getValue(i) != 0 |==> period.getValue(i) < 0
595:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1463:period.getValue(i) != 0 |==> period.getValue(i) > 0
596:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1463:period.getValue(i) != 0 |==> true
597:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1492:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) != type.isSupported(DurationFieldType.millis())
598:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1492:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds())
599:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1493:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.millis())
600:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1492:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> true
601:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1565:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> false
602:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1565:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> true
603:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1566:position + iText.length() |==> position % iText.length()
604:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1566:position + iText.length() |==> position * iText.length()
605:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1566:position + iText.length() |==> position - iText.length()
606:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1566:position + iText.length() |==> position / iText.length()
607:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:finalText == null |==> false
608:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:finalText == null || text.equals(finalText) |==> finalText == null != text.equals(finalText)
609:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:finalText == null || text.equals(finalText) |==> finalText == null
610:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:finalText == null || text.equals(finalText) |==> text.equals(finalText)
611:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:finalText == null || text.equals(finalText) |==> true
612:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants == null |==> false
613:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants.length == 0 |==> variants.length <= 0
614:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants.length == 0 |==> variants.length >= 0
615:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants.length == 0 |==> false
616:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants == null || variants.length == 0 |==> variants == null != (variants.length == 0)
617:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants == null || variants.length == 0 |==> variants == null
618:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants == null || variants.length == 0 |==> variants.length == 0
619:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:variants == null || variants.length == 0 |==> true
620:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) == (variants == null || variants.length == 0)
621:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> false
622:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1597:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText))
623:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1598:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (variants == null || variants.length == 0)
624:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1606:variants != null |==> true
625:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1607:--i >= 0 |==> --i == 0
626:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1607:--i >= 0 |==> --i > 0
627:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1607:--i >= 0 |==> true
628:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1624:sum < stopAt |==> sum != stopAt
629:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1624:sum < stopAt |==> sum <= stopAt
630:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1624:sum < stopAt |==> false
631:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1634:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) % after.calculatePrintedLength(period, locale)
632:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1634:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) * after.calculatePrintedLength(period, locale)
633:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1634:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) - after.calculatePrintedLength(period, locale)
634:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1634:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) / after.calculatePrintedLength(period, locale)
635:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1637:iUseBefore |==> false
636:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1637:iUseBefore |==> true
637:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1638:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
638:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1638:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
639:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1638:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
640:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1639:iUseAfter |==> false
641:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1639:iUseAfter |==> true
642:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1641:afterCount > 0 |==> afterCount != 0
643:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1641:afterCount > 0 |==> afterCount >= 0
644:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1641:afterCount > 0 |==> false
645:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1642:afterCount > 1 |==> afterCount != 1
646:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1642:afterCount > 1 |==> afterCount >= 1
647:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1642:afterCount > 1 |==> false
648:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
649:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
650:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
651:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
652:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
653:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
654:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
655:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1660:iUseBefore |==> false
656:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1660:iUseBefore |==> true
657:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1661:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
658:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1661:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
659:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1661:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
660:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1662:iUseAfter |==> false
661:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1662:iUseAfter |==> true
662:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1664:afterCount > 0 |==> afterCount != 0
663:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1664:afterCount > 0 |==> afterCount >= 0
664:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1664:afterCount > 0 |==> false
665:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:afterCount > 1 |==> afterCount != 1
666:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:afterCount > 1 |==> afterCount >= 1
667:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:afterCount > 1 |==> false
668:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
669:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
670:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
671:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
672:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
673:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
674:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
675:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1682:iUseBefore |==> false
676:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1682:iUseBefore |==> true
677:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1683:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
678:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1683:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
679:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1683:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
680:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1684:iUseAfter |==> false
681:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1684:iUseAfter |==> true
682:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1686:afterCount > 0 |==> afterCount != 0
683:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1686:afterCount > 0 |==> afterCount >= 0
684:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1686:afterCount > 0 |==> false
685:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:afterCount > 1 |==> afterCount != 1
686:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:afterCount > 1 |==> afterCount >= 1
687:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:afterCount > 1 |==> false
688:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
689:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
690:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
691:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
692:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
693:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
694:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
695:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1705:position < 0 |==> position != 0
696:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1705:position < 0 |==> position <= 0
697:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1705:position < 0 |==> false
698:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1710:position > oldPos |==> position != oldPos
699:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1710:position > oldPos |==> position >= oldPos
700:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1710:position > oldPos |==> false
701:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1714:i < length |==> i != length
702:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1714:i < length |==> i <= length
703:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1714:i < length |==> false
704:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm == null |==> false
705:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm.length() == 0 |==> parsedForm.length() <= 0
706:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm.length() == 0 |==> parsedForm.length() >= 0
707:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm.length() == 0 |==> false
708:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null != (parsedForm.length() == 0)
709:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null
710:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm == null || parsedForm.length() == 0 |==> parsedForm.length() == 0
711:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:parsedForm == null || parsedForm.length() == 0 |==> true
712:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) != periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
713:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0)
714:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1717:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
715:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> true
716:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1730:position < 0 |==> position != 0
717:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1730:position < 0 |==> position <= 0
718:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1730:position < 0 |==> false
719:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:position == oldPos |==> position <= oldPos
720:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:position == oldPos |==> position >= oldPos
721:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:position == oldPos |==> false
722:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:found && position == oldPos |==> found == (position == oldPos)
723:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:found && position == oldPos |==> false
724:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:found && position == oldPos |==> found
725:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:found && position == oldPos |==> position == oldPos
726:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos |==> position != oldPos
727:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos |==> position >= oldPos
728:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos |==> false
729:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found |==> position > oldPos == !found
730:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found |==> false
731:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found |==> position > oldPos
732:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found |==> !found
733:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found && !iUseBefore |==> (position > oldPos && !found) == !iUseBefore
734:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found && !iUseBefore |==> false
735:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found && !iUseBefore |==> position > oldPos && !found
736:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1739:position > oldPos && !found && !iUseBefore |==> !iUseBefore
737:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1770:printerList.size() <= 0 |==> printerList.size() < 0
738:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1770:printerList.size() <= 0 |==> printerList.size() == 0
739:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1770:printerList.size() <= 0 |==> true
740:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1777:parserList.size() <= 0 |==> parserList.size() < 0
741:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1777:parserList.size() <= 0 |==> parserList.size() == 0
742:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1777:parserList.size() <= 0 |==> true
743:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt |==> sum != stopAt
744:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt |==> sum <= stopAt
745:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt |==> false
746:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:--i >= 0 |==> --i == 0
747:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:--i >= 0 |==> --i > 0
748:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:--i >= 0 |==> true
749:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt && --i >= 0 |==> sum < stopAt == --i >= 0
750:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt && --i >= 0 |==> false
751:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt && --i >= 0 |==> sum < stopAt
752:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:sum < stopAt && --i >= 0 |==> --i >= 0
753:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1797:--i >= 0 |==> --i == 0
754:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1797:--i >= 0 |==> --i > 0
755:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1797:--i >= 0 |==> true
756:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1806:i < len |==> i != len
757:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1806:i < len |==> i <= len
758:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1806:i < len |==> false
759:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1814:i < len |==> i != len
760:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1814:i < len |==> i <= len
761:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1814:i < len |==> false
762:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1823:parsers == null |==> false
763:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len |==> i != len
764:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len |==> i <= len
765:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len |==> false
766:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:position >= 0 |==> position == 0
767:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:position >= 0 |==> position > 0
768:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:position >= 0 |==> true
769:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len && position >= 0 |==> i < len == position >= 0
770:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len && position >= 0 |==> false
771:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len && position >= 0 |==> i < len
772:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1828:i < len && position >= 0 |==> position >= 0
773:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1836:i < size |==> i != size
774:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1836:i < size |==> i <= size
775:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1836:i < size |==> false
776:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1846:i + 1 |==> i % 1
777:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1846:i + 1 |==> i * 1
778:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1846:i + 1 |==> i - 1
779:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1846:i + 1 |==> i / 1
780:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1858:array != null |==> true
781:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1859:i < array.length |==> i != array.length
782:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1859:i < array.length |==> i <= array.length
783:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1859:i < array.length |==> false
