1:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology):156:type == null |==> false
2:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):193:types == null |==> false
3:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):196:values == null |==> false
4:ROR:!=(int,int):<(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> values.length < types.length
5:ROR:!=(int,int):>(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> values.length > types.length
6:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):199:values.length != types.length |==> true
7:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> types.length <= 0
8:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> types.length >= 0
9:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):202:types.length == 0 |==> false
10:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> i != types.length
11:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> i <= types.length
12:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):207:i < types.length |==> false
13:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):208:types[i] == null |==> false
14:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> i != types.length
15:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> i <= types.length
16:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):213:i < types.length |==> false
17:ROR:>(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> i != 0
18:ROR:>(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> i >= 0
19:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):216:i > 0 |==> false
20:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 |==> compare != 0
21:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 |==> compare <= 0
22:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 |==> false
23:ROR:!=(int,int):<(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 |==> compare < 0
24:ROR:!=(int,int):>(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 |==> compare > 0
25:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 |==> true
26:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:loopUnitField.isSupported() == false |==> false
27:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:loopUnitField.isSupported() == false |==> loopUnitField.isSupported()
28:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:loopUnitField.isSupported() == false |==> false
29:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> compare != 0 == (loopUnitField.isSupported() == false)
30:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> false
31:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> compare != 0
32:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare != 0 && loopUnitField.isSupported() == false |==> loopUnitField.isSupported() == false
33:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> compare < 0 != (compare != 0 && loopUnitField.isSupported() == false)
34:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> compare < 0
35:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> (compare != 0 && loopUnitField.isSupported() == false)
36:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):218:compare < 0 || (compare != 0 && loopUnitField.isSupported() == false) |==> true
37:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i % 1
38:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i * 1
39:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i + 1
40:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):220:i - 1 |==> i / 1
41:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:compare == 0 |==> compare <= 0
42:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:compare == 0 |==> compare >= 0
43:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):221:compare == 0 |==> false
44:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i % 1
45:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i * 1
46:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i + 1
47:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:i - 1 |==> i / 1
48:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):222:types[i - 1].getRangeDurationType() == null |==> false
49:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):223:loopType.getRangeDurationType() == null |==> false
50:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):225:i - 1 |==> i % 1
51:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):225:i - 1 |==> i * 1
52:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):225:i - 1 |==> i + 1
53:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):225:i - 1 |==> i / 1
54:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):228:loopType.getRangeDurationType() == null |==> false
55:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:i - 1 |==> i % 1
56:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:i - 1 |==> i * 1
57:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:i - 1 |==> i + 1
58:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):230:i - 1 |==> i / 1
59:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):232:i - 1 |==> i % 1
60:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):232:i - 1 |==> i * 1
61:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):232:i - 1 |==> i + 1
62:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):232:i - 1 |==> i / 1
63:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:lastRangeField.compareTo(loopRangeField) < 0 |==> lastRangeField.compareTo(loopRangeField) != 0
64:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:lastRangeField.compareTo(loopRangeField) < 0 |==> lastRangeField.compareTo(loopRangeField) <= 0
65:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):234:lastRangeField.compareTo(loopRangeField) < 0 |==> false
66:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):236:i - 1 |==> i % 1
67:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):236:i - 1 |==> i * 1
68:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):236:i - 1 |==> i + 1
69:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):236:i - 1 |==> i / 1
70:ROR:==(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):238:lastRangeField.compareTo(loopRangeField) == 0 |==> lastRangeField.compareTo(loopRangeField) <= 0
71:ROR:==(int,int):>=(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):238:lastRangeField.compareTo(loopRangeField) == 0 |==> lastRangeField.compareTo(loopRangeField) >= 0
72:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):238:lastRangeField.compareTo(loopRangeField) == 0 |==> false
73:AOR:-(int,int):%(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):240:i - 1 |==> i % 1
74:AOR:-(int,int):*(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):240:i - 1 |==> i * 1
75:AOR:-(int,int):+(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):240:i - 1 |==> i + 1
76:AOR:-(int,int):/(int,int):org.joda.time.Partial@<init>(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology):240:i - 1 |==> i / 1
77:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):261:partial == null |==> false
78:ROR:<(int,int):!=(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):267:i < partial.size() |==> i != partial.size()
79:ROR:<(int,int):<=(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):267:i < partial.size() |==> i <= partial.size()
80:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@<init>(org.joda.time.ReadablePartial):267:i < partial.size() |==> false
81:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@withChronologyRetainFields(org.joda.time.Chronology):404:newChronology == getChronology() |==> false
82:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):429:fieldType == null |==> false
83:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):433:index == -1 |==> index <= -1
84:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):433:index == -1 |==> index >= -1
85:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):433:index == -1 |==> false
86:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):434:iTypes.length + 1 |==> iTypes.length % 1
87:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):434:iTypes.length + 1 |==> iTypes.length * 1
88:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):434:iTypes.length + 1 |==> iTypes.length - 1
89:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):434:iTypes.length + 1 |==> iTypes.length / 1
90:COR:unitField.isSupported():TRUE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):440:unitField.isSupported() |==> false
91:COR:unitField.isSupported():FALSE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):440:unitField.isSupported() |==> true
92:ROR:<(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):441:i < iTypes.length |==> i != iTypes.length
93:ROR:<(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):441:i < iTypes.length |==> i <= iTypes.length
94:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):441:i < iTypes.length |==> false
95:COR:loopUnitField.isSupported():TRUE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:loopUnitField.isSupported() |==> false
96:COR:loopUnitField.isSupported():FALSE:org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):444:loopUnitField.isSupported() |==> true
97:ROR:>(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:compare > 0 |==> compare != 0
98:ROR:>(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:compare > 0 |==> compare >= 0
99:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):446:compare > 0 |==> false
100:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):448:compare == 0 |==> compare <= 0
101:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):448:compare == 0 |==> compare >= 0
102:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):448:compare == 0 |==> false
103:ROR:>(int,int):!=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):451:rangeField.compareTo(loopRangeField) > 0 |==> rangeField.compareTo(loopRangeField) != 0
104:ROR:>(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):451:rangeField.compareTo(loopRangeField) > 0 |==> rangeField.compareTo(loopRangeField) >= 0
105:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):451:rangeField.compareTo(loopRangeField) > 0 |==> false
106:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:i + 1 |==> i % 1
107:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:i + 1 |==> i * 1
108:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:i + 1 |==> i - 1
109:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:i + 1 |==> i / 1
110:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i |==> newTypes.length % i
111:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i |==> newTypes.length * i
112:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i |==> newTypes.length + i
113:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i |==> newTypes.length / i
114:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i - 1 |==> (newTypes.length - i) % 1
115:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i - 1 |==> (newTypes.length - i) * 1
116:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i - 1 |==> newTypes.length - i + 1
117:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):462:newTypes.length - i - 1 |==> (newTypes.length - i) / 1
118:AOR:+(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:i + 1 |==> i % 1
119:AOR:+(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:i + 1 |==> i * 1
120:AOR:+(int,int):-(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:i + 1 |==> i - 1
121:AOR:+(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:i + 1 |==> i / 1
122:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i |==> newValues.length % i
123:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i |==> newValues.length * i
124:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i |==> newValues.length + i
125:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i |==> newValues.length / i
126:AOR:-(int,int):%(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i - 1 |==> (newValues.length - i) % 1
127:AOR:-(int,int):*(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i - 1 |==> (newValues.length - i) * 1
128:AOR:-(int,int):+(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i - 1 |==> newValues.length - i + 1
129:AOR:-(int,int):/(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):463:newValues.length - i - 1 |==> (newValues.length - i) / 1
130:ROR:==(int,int):<=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:value == getValue(index) |==> value <= getValue(index)
131:ROR:==(int,int):>=(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:value == getValue(index) |==> value >= getValue(index)
132:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@with(org.joda.time.DateTimeFieldType,int):470:value == getValue(index) |==> false
133:ROR:!=(int,int):<(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:index != -1 |==> index < -1
134:ROR:!=(int,int):>(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:index != -1 |==> index > -1
135:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):488:index != -1 |==> true
136:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:size() - 1 |==> size() % 1
137:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:size() - 1 |==> size() * 1
138:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:size() - 1 |==> size() + 1
139:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):489:size() - 1 |==> size() / 1
140:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:size() - 1 |==> size() % 1
141:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:size() - 1 |==> size() * 1
142:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:size() - 1 |==> size() + 1
143:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):490:size() - 1 |==> size() / 1
144:AOR:+(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index % 1
145:AOR:+(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index * 1
146:AOR:+(int,int):-(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index - 1
147:AOR:+(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:index + 1 |==> index / 1
148:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newTypes.length - index |==> newTypes.length % index
149:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newTypes.length - index |==> newTypes.length * index
150:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newTypes.length - index |==> newTypes.length + index
151:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):492:newTypes.length - index |==> newTypes.length / index
152:AOR:+(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:index + 1 |==> index % 1
153:AOR:+(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:index + 1 |==> index * 1
154:AOR:+(int,int):-(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:index + 1 |==> index - 1
155:AOR:+(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:index + 1 |==> index / 1
156:AOR:-(int,int):%(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:newValues.length - index |==> newValues.length % index
157:AOR:-(int,int):*(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:newValues.length - index |==> newValues.length * index
158:AOR:-(int,int):+(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:newValues.length - index |==> newValues.length + index
159:AOR:-(int,int):/(int,int):org.joda.time.Partial@without(org.joda.time.DateTimeFieldType):494:newValues.length - index |==> newValues.length / index
160:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):519:value == getValue(index) |==> value <= getValue(index)
161:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):519:value == getValue(index) |==> value >= getValue(index)
162:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withField(org.joda.time.DateTimeFieldType,int):519:value == getValue(index) |==> false
163:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):543:amount == 0 |==> amount <= 0
164:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):543:amount == 0 |==> amount >= 0
165:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withFieldAdded(org.joda.time.DurationFieldType,int):543:amount == 0 |==> false
166:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):567:amount == 0 |==> amount <= 0
167:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):567:amount == 0 |==> amount >= 0
168:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withFieldAddWrapped(org.joda.time.DurationFieldType,int):567:amount == 0 |==> false
169:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:period == null |==> false
170:ROR:==(int,int):<=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:scalar == 0 |==> scalar <= 0
171:ROR:==(int,int):>=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:scalar == 0 |==> scalar >= 0
172:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:scalar == 0 |==> false
173:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:period == null || scalar == 0 |==> period == null != (scalar == 0)
174:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:period == null || scalar == 0 |==> period == null
175:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:period == null || scalar == 0 |==> scalar == 0
176:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):591:period == null || scalar == 0 |==> true
177:ROR:<(int,int):!=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):595:i < period.size() |==> i != period.size()
178:ROR:<(int,int):<=(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):595:i < period.size() |==> i <= period.size()
179:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):595:i < period.size() |==> false
180:ROR:>=(int,int):==(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):598:index >= 0 |==> index == 0
181:ROR:>=(int,int):>(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):598:index >= 0 |==> index > 0
182:ROR:>=(int,int):TRUE(int,int):org.joda.time.Partial@withPeriodAdded(org.joda.time.ReadablePeriod,int):598:index >= 0 |==> true
183:ROR:<(int,int):!=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):660:i < iTypes.length |==> i != iTypes.length
184:ROR:<(int,int):<=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):660:i < iTypes.length |==> i <= iTypes.length
185:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):660:i < iTypes.length |==> false
186:ROR:!=(int,int):<(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):662:value != iValues[i] |==> value < iValues[i]
187:ROR:!=(int,int):>(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):662:value != iValues[i] |==> value > iValues[i]
188:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadableInstant):662:value != iValues[i] |==> true
189:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):682:partial == null |==> false
190:ROR:<(int,int):!=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):685:i < iTypes.length |==> i != iTypes.length
191:ROR:<(int,int):<=(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):685:i < iTypes.length |==> i <= iTypes.length
192:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):685:i < iTypes.length |==> false
193:ROR:!=(int,int):<(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):687:value != iValues[i] |==> value < iValues[i]
194:ROR:!=(int,int):>(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):687:value != iValues[i] |==> value > iValues[i]
195:ROR:!=(int,int):TRUE(int,int):org.joda.time.Partial@isMatch(org.joda.time.ReadablePartial):687:value != iValues[i] |==> true
196:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@getFormatter():708:f == null |==> false
197:ROR:==(int,int):<=(int,int):org.joda.time.Partial@getFormatter():709:size() == 0 |==> size() <= 0
198:ROR:==(int,int):>=(int,int):org.joda.time.Partial@getFormatter():709:size() == 0 |==> size() >= 0
199:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@getFormatter():709:size() == 0 |==> false
200:ROR:==(int,int):<=(int,int):org.joda.time.Partial@getFormatter():716:list.size() == 0 |==> list.size() <= 0
201:ROR:==(int,int):>=(int,int):org.joda.time.Partial@getFormatter():716:list.size() == 0 |==> list.size() >= 0
202:ROR:==(int,int):FALSE(int,int):org.joda.time.Partial@getFormatter():716:list.size() == 0 |==> false
203:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():741:f == null |==> false
204:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():744:f == null |==> false
205:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString():749:f1 == null |==> false
206:AOR:*(int,int):%(int,int):org.joda.time.Partial@toStringList():766:20 * size |==> 20 % size
207:AOR:*(int,int):+(int,int):org.joda.time.Partial@toStringList():766:20 * size |==> 20 + size
208:AOR:*(int,int):-(int,int):org.joda.time.Partial@toStringList():766:20 * size |==> 20 - size
209:AOR:*(int,int):/(int,int):org.joda.time.Partial@toStringList():766:20 * size |==> 20 / size
210:ROR:<(int,int):!=(int,int):org.joda.time.Partial@toStringList():768:i < size |==> i != size
211:ROR:<(int,int):<=(int,int):org.joda.time.Partial@toStringList():768:i < size |==> i <= size
212:ROR:<(int,int):FALSE(int,int):org.joda.time.Partial@toStringList():768:i < size |==> false
213:ROR:>(int,int):!=(int,int):org.joda.time.Partial@toStringList():769:i > 0 |==> i != 0
214:ROR:>(int,int):>=(int,int):org.joda.time.Partial@toStringList():769:i > 0 |==> i >= 0
215:ROR:>(int,int):FALSE(int,int):org.joda.time.Partial@toStringList():769:i > 0 |==> false
216:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString(java.lang.String):788:pattern == null |==> false
217:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.Partial@toString(java.lang.String,java.util.Locale):803:pattern == null |==> false
218:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):49:cCache == null |==> false
219:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@getInstance(org.joda.time.DurationFieldType):55:field == null |==> false
220:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):238:this == obj |==> false
221:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):242:other.getName() == null |==> false
222:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.field.UnsupportedDurationField@equals(java.lang.Object):243:getName() == null |==> false
